
// type PairBool
// Contains 2 Booleans inside it
PairBool: Type
PairBool.new (fst: Bool) (snd: Bool): PairBool 

// Returns the first element of a pair
PairBool.fst (a: PairBool): Bool
PairBool.fst a = ?

// Returns the second element of a pair
PairBool.snd (a: PairBool): Bool
PairBool.snd a = ?

// Returns true if both elements of a PairBool are identical
PairBool.eql_elements (a: PairBool): Bool
PairBool.eql_elements a = ?

// Returns true if both Pairs are equal 
// eql(PairBool.new(false, false), PairBool.new(true, true)) -> false 
// eql(PairBool.new(true, false), PairBool.new(true, false)) -> true
PairBool.eql (a: PairBool) (b:PairBool): Bool
PairBool.eql a b = ?

// Returns true if both Pairs are different
// not_eql(PairBool.new(false, false), PairBool.new(true, true)) -> true 
// not_eql(PairBool.new(true, false), PairBool.new(true, false)) -> false
PairBool.not_eql (a: PairBool) (b:PairBool): Bool
PairBool.not_eql a b = ?

// Creates a PairBool from 2 Booleans
PairBool.create (a: Bool) (b: Bool): PairBool
PairBool.create a b = ?

// Inverts the values of a PairBool
// neg(PairBool.new(false, false)) -> PairBool.new(true, true)
// neg(PairBool.new(false, true)) -> PairBool.new(true, false)
PairBool.neg (a: PairBool): PairBool
PairBool.neg a = ?

// Inverts the 2 elements of a PairBool
PairBool.swap (a: PairBool): PairBool
PairBool.swap a = ?

// Main {
// }